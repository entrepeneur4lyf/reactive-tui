name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ develop ]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: x86_64-apple-darwin
            build: npm run build
          - host: windows-latest
            target: x86_64-pc-windows-msvc
            build: npm run build
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            build: npm run build
          - host: ubuntu-latest
            target: x86_64-unknown-linux-musl
            build: npm run build
          - host: macos-latest
            target: aarch64-apple-darwin
            build: npm run build
          - host: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            build: npm run build -- --target aarch64-unknown-linux-gnu
          - host: ubuntu-latest
            target: aarch64-unknown-linux-musl
            build: npm run build -- --target aarch64-unknown-linux-musl
          - host: windows-latest
            target: aarch64-pc-windows-msvc
            build: npm run build -- --target aarch64-pc-windows-msvc

    name: stable - ${{ matrix.settings.target }} - node@18
    runs-on: ${{ matrix.settings.host }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          check-latest: true
          cache: npm

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.settings.target }}

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            .cargo-cache
            target/
          key: ${{ matrix.settings.target }}-cargo-${{ matrix.settings.host }}

      - name: Setup toolchain
        run: ${{ matrix.settings.setup }}
        if: ${{ matrix.settings.setup }}
        shell: bash

      - name: Setup node x86
        if: matrix.settings.target == 'i686-pc-windows-msvc'
        run: npm config set target_arch ia32
        shell: bash

      - name: Install dependencies
        run: npm ci

      - name: Setup node x86
        uses: actions/setup-node@v4
        if: matrix.settings.target == 'i686-pc-windows-msvc'
        with:
          node-version: 18
          check-latest: true
          cache: npm
          architecture: x86

      - name: Build
        run: ${{ matrix.settings.build }}
        shell: bash

      - name: Test
        run: npm test

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          check-latest: true
          cache: npm

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Install dependencies
        run: npm ci

      - name: Lint TypeScript
        run: npm run lint

      - name: Format check TypeScript
        run: npm run format

      - name: Clippy
        run: cargo clippy --features ffi -- -D warnings

      - name: Format check Rust
        run: cargo fmt --check

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          check-latest: true
          cache: npm

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: npm ci

      - name: Audit npm dependencies
        run: npm audit --audit-level moderate

      - name: Install cargo-audit
        run: cargo install cargo-audit

      - name: Audit Rust dependencies
        run: cargo audit

  coverage:
    name: Coverage
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          check-latest: true
          cache: npm

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview

      - name: Install cargo-llvm-cov
        run: cargo install cargo-llvm-cov

      - name: Install dependencies
        run: npm ci

      - name: Generate coverage
        run: cargo llvm-cov --features ffi --lcov --output-path lcov.info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: lcov.info
          flags: rust
          name: codecov-rust